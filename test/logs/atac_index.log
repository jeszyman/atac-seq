Settings:
  Output files: "test/ref/ucsc_mm10_chr19/ucsc_mm10_chr19.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  test/inputs/chr19.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 14551464
Using parameters --bmax 10913598 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 10913598 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:02
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:01
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 7.27573e+06 (target: 10913597)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 7228109
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 7228110
Getting block 2 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 4259473
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 4259474
Getting block 3 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 7357196
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 7357197
Getting block 4 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 8797584
  (Using difference cover)
  Sorting block time: 00:00:03
Returning block of 8797585
Getting block 5 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 7959254
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 7959255
Getting block 6 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 7865742
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 7865743
Getting block 7 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 9020469
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 9020470
Getting block 8 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 5718022
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 5718023
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 16732680
fchr[G]: 29182023
fchr[T]: 41602903
fchr[$]: 58205856
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 23596491 bytes to primary EBWT file: test/ref/ucsc_mm10_chr19/ucsc_mm10_chr19.1.bt2
Wrote 14551472 bytes to secondary EBWT file: test/ref/ucsc_mm10_chr19/ucsc_mm10_chr19.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 58205856
    bwtLen: 58205857
    sz: 14551464
    bwtSz: 14551465
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 3637867
    offsSz: 14551468
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 303156
    numLines: 303156
    ebwtTotLen: 19401984
    ebwtTotSz: 19401984
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:29
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 14551464
Using parameters --bmax 10913598 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 10913598 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:02
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 7.27573e+06 (target: 10913597)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 6260351
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 6260352
Getting block 2 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6910887
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 6910888
Getting block 3 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 8157509
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 8157510
Getting block 4 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 7834112
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 7834113
Getting block 5 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 8984477
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 8984478
Getting block 6 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 8797325
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 8797326
Getting block 7 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 10621647
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 10621648
Getting block 8 of 8
  Reserving size (10913598) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 639541
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 639542
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 16732680
fchr[G]: 29182023
fchr[T]: 41602903
fchr[$]: 58205856
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 23596491 bytes to primary EBWT file: test/ref/ucsc_mm10_chr19/ucsc_mm10_chr19.rev.1.bt2
Wrote 14551472 bytes to secondary EBWT file: test/ref/ucsc_mm10_chr19/ucsc_mm10_chr19.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 58205856
    bwtLen: 58205857
    sz: 14551464
    bwtSz: 14551465
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 3637867
    offsSz: 14551468
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 303156
    numLines: 303156
    ebwtTotLen: 19401984
    ebwtTotSz: 19401984
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:27
